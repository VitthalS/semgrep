name: Env Tests

on:
  pull_request:
  push:
    branches: [master, develop]
    tags: ["v*"] # Push events to matching v*, i.e. v1.0, v20.15.10

jobs:
  build-core:
    runs-on: ubuntu-latest
    container: returntocorp/sgrep-build:2.8
    steps:
      - name: Adjust permissions
        run: |
          sudo chmod -R 777 . /github
          # github cache dir
          sudo mkdir -p /__w/
          sudo chmod -R 777 /__w/
      - name: Checkout
        uses: actions/checkout@v2
      - name: Install submodules
        run: git submodule update --init --recursive
      - name: Install pfff
        run: eval $(opam  env --root /home/opam/.opam --set-root) && opam install -y ./pfff
      - name: Install semgrep-core
        run: eval $(opam  env --root /home/opam/.opam --set-root) && cd semgrep-core && opam install --deps-only -y . && make all && make install
      - name: Upload semgrep-core
        run: |
          mkdir -p semgrep-files
          cp ./semgrep-core/_build/default/bin/Main.exe semgrep-files/semgrep-core
      - name: Upload artifacts
        uses: actions/upload-artifact@v1
        with:
          name: semgrep-core
          path: semgrep-files/semgrep-core
  tox-tests:
    runs-on: ubuntu-latest
    needs: [build-core]
    strategy:
      matrix:
        python: [3.6, 3.7, 3.8]
    steps:
      - name: Setup Python
        uses: actions/setup-python@v1
        with:
          python-version: ${{ matrix.python }}
      - name: Checkout
        uses: actions/checkout@v2
      - name: Download Artifact
        uses: actions/download-artifact@v1
        with:
          name: semgrep-core
          path: semgrep-core-dir
      - name: Install artifact
        run: |
          sudo cp semgrep-core-dir/semgrep-core /usr/bin/semgrep-core
          sudo chmod +x /usr/bin/semgrep-core
      - name: Test semgrep-core
        run: semgrep-core -version
      - name: Install Tox and any other packages
        run: pip install pipenv==2018.11.26 wheel==0.34.2 tox==3.15.0
      - name: Run Tox
        run: |
          cd semgrep
          tox -e py  # Run tox using the version of Python in `PATH`
  benchmark:
    runs-on: ubuntu-latest
    needs: [build-core]
    container: returntocorp/sgrep-build:2.8
    steps:
      - name: Setup Python
        uses: actions/setup-python@v1
        with:
          python-version: 3.7
      - name: Checkout
        uses: actions/checkout@v2
      - name: Download Artifact
        uses: actions/download-artifact@v1
        with:
          name: semgrep-core
          path: semgrep-core-dir
      - name: Install artifact
        run: |
          sudo cp semgrep-core-dir/semgrep-core /usr/bin/semgrep-core
          sudo chmod +x /usr/bin/semgrep-core
      - name: Test semgrep-core
        run: semgrep-core -version
      - name: Install Tox and any other packages
        run: pip install pipenv==2018.11.26 wheel==0.34.2
      - name: Install semgrep
        run: |
          cd semgrep
          export PATH=/github/home/.local/bin:$PATH
          pipenv install --dev
      - name: Check semgrep
        run: |
          cd semgrep
          export PATH=/github/home/.local/bin:$PATH
          pipenv run semgrep --version
      - uses: actions/cache@v2
        with:
          path: ~/.cache/semgrep-cache
          key: semgrep-repo-cache-bench
      - name: run benchmarks
        run: |
          cd semgrep
          mkdir -p ~/.cache/semgrep-cache
          # TODO: figure out what checks we want to run on PRs
          eval $(opam  env --root /home/opam/.opam --set-root)
          export PATH=/github/home/.local/bin:$PATH
          pipenv run pytest -k test_ci_perf tests/ --benchmark-min-rounds 1 --benchmark-only --benchmark-autosave --benchmark-storage benchmarks
        env:
          GITHUB_REPO_CACHE: ~/.cache/semgrep-cache
      - name: Compare to previous benchmark result
        run: |
          cd semgrep
          eval $(opam  env --root /home/opam/.opam --set-root)
          export PATH=/github/home/.local/bin:$PATH
          pipenv run py.test-benchmark compare benchmarks/Linux-*/* --group-by name --sort name
        # compare to previous runs, even if we had a timeout or a test failure
        if: ${{ always() }}
      - name: Upload benchmark results
        uses: actions/upload-artifact@v1
        with:
          name: benchmarks
          path: semgrep/benchmarks
